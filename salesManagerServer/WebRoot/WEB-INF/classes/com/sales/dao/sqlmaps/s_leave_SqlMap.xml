<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="s_leave" >
  <resultMap id="SLeaveResult" class="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    <result column="leave_id" property="leaveId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="back_time" property="backTime" jdbcType="DATE" />
    <result column="agent" property="agent" jdbcType="VARCHAR" />
    <result column="leave_time" property="leaveTime" jdbcType="DATE" />
    <result column="leave_days" property="leaveDays" jdbcType="FLOAT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="leave_code" property="leaveCode" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByPrimaryKey" resultMap="SLeaveResult" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    select l.leave_id, l.type_id, l.user_id, l.start_time, l.end_time, l.comment, l.status, l.back_time, l.agent,
      l.leave_time, l.leave_days, u.user_name, l.leave_code 
    from s_leave l left join s_user u on l.user_id = u.user_id 
    where l.leave_id = #leaveId:INTEGER#
  </select>
  <select id="getMaxCode" resultClass="java.lang.String">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    select max(leave_code) from s_leave where DATE_FORMAT(leave_time,'%Y-%m-%d')  = curdate()
  </select>
  <delete id="deleteByPrimaryKey" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    delete from s_leave
    where leave_id = #leaveId:INTEGER#
  </delete>
  <insert id="insert" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    insert into s_leave (leave_id, type_id, user_id, start_time, end_time, leave_days, comment, status,
      back_time, agent, leave_time,leave_code)
    values (#leaveId:INTEGER#, #typeId:INTEGER#, #userId:INTEGER#, #startTime:DATE#, #endTime:DATE#, #leaveDays:FLOAT#,
      #comment:VARCHAR#, #status:INTEGER#, #backTime:DATE#, #agent:VARCHAR#, #leaveTime:TIMESTAMP#, #leaveCode:VARCHAR#) 
      <selectKey resultClass="int" keyProperty="leaveId">
		select LAST_INSERT_ID() as leaveId
	  </selectKey>
  </insert>
  <update id="updateByPrimaryKey" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    update s_leave
    set type_id = #typeId:INTEGER#,
      user_id = #userId:INTEGER#,
      start_time = #startTime:DATE#,
      end_time = #endTime:DATE#,
      leave_days = #leaveDays:FLOAT#,
      comment = #comment:VARCHAR#,
      status = #status:INTEGER#,
      back_time = #backTime:DATE#,
      agent = #agent:VARCHAR#,
      leave_time = #leaveTime:DATE#
    where leave_id = #leaveId:INTEGER#
  </update>
  <update id="updateByPrimaryKeySelective" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    update s_leave
    <dynamic prepend="set" >
      <isNotNull prepend="," property="typeId" >
        type_id = #typeId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="userId" >
        user_id = #userId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="startTime" >
        start_time = #startTime:DATE#
      </isNotNull>
      <isNotNull prepend="," property="endTime" >
        end_time = #endTime:DATE#
      </isNotNull>
      <isNotNull prepend="," property="leaveDays" >
        leave_days = #leaveDays:FLOAT#
      </isNotNull>
      <isNotNull prepend="," property="comment" >
        comment = #comment:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status" >
        status = #status:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="backTime" >
        back_time = #backTime:DATE#
      </isNotNull>
      <isNotNull prepend="," property="agent" >
        agent = #agent:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="leaveTime" >
        leave_time = #leaveTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="leaveCode" >
        leave_code = #leaveCode:VARCHAR#
      </isNotNull>
    </dynamic>
    where leave_id = #leaveId:INTEGER#
  </update>
  
  <select id="getLeaveListPage" resultMap="SLeaveResult" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    select l.leave_id, l.type_id, l.user_id, l.start_time, l.end_time, l.comment, l.status, l.back_time, l.agent,
      l.leave_time, l.leave_days, u.user_name, l.leave_code 
    from s_leave l left join s_user u on l.user_id = u.user_id 
    <dynamic prepend="where">
        <isNotEmpty prepend="and" property="userId">
			l.user_id = #userId# 
		</isNotEmpty>
		<isNotEmpty property="typeId">
		    <isNotEqual prepend="and" property="typeId" compareValue = "-1">
			    l.type_id = #typeId#
			</isNotEqual>
		</isNotEmpty>
	</dynamic>
	order by l.leave_time desc 
	<dynamic prepend="limit">
		<isNotNull property="pageStart">
			<isNotNull property="pageSize">#pageStart#, #pageSize#</isNotNull>
		</isNotNull>
	</dynamic>
  </select>
  
  <select id="getLeaveListPageCount" resultClass="java.lang.Integer" parameterClass="com.sales.model.SLeave" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    select count(l.leave_id)  
    from s_leave l left join s_user u on l.user_id = u.user_id 
    <dynamic prepend="where">
        <isNotEmpty prepend="and" property="userId">
			l.user_id = #userId# 
		</isNotEmpty>
		<isNotEmpty property="typeId">
			<isNotEqual prepend="and" property="typeId" compareValue = "-1">
			    l.type_id = #typeId#
			</isNotEqual>
		</isNotEmpty>
	</dynamic>
  </select>
  
  <resultMap id="ProcessResult" class="com.sales.model.SProcess" >
    <result column="processId" property="processId" jdbcType="INTEGER" />
    <result column="processTypeId" property="processTypeId" jdbcType="INTEGER" />
    <result column="deptName" property="deptName" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="appTime" property="appTime" jdbcType="DATE" />   
  </resultMap>
  
  <select id="getProcessListPage" resultMap="ProcessResult" parameterClass="com.sales.model.SProcess" >
    select processId,processTypeId,userName,deptName,appTime from
		(select leave_id as processId,1 as processTypeId, u.user_name as userName,d.name as deptName,l.leave_time as appTime,u.user_id,l.status     
		from s_leave l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select overtime_id as processId,2 as processTypeId, u.user_name as userName,d.name as deptName,l.overtime_time as appTime,u.user_id,l.status      
		from s_overtime l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select trip_id as processId,3 as processTypeId, u.user_name as userName,d.name as deptName,l.trip_time as appTime,u.user_id,l.status      
		from s_trip_application l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select expense_application_id as processId,4 as processTypeId, u.user_name as userName,d.name as deptName,l.expense_time as appTime,u.user_id,l.status      
		from s_expense_application l 
		left join s_user u on l.expense_user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select reimbursement_id as processId,5 as processTypeId, u.user_name as userName,d.name as deptName,l.reimbursement_time as appTime ,u.user_id,l.status     
		from s_expense_reimbursement l 
		left join s_user u on l.reimbursement_user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select car_application_id as processId,6 as processTypeId, u.user_name as userName,d.name as deptName,l.application_time as appTime,u.user_id,l.status      
		from s_car_repair_application l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select car_reimbursement_id as processId,7 as processTypeId, u.user_name as userName,d.name as deptName,l.reimbursement_time as appTime,u.user_id,l.status      
		from s_car_repair_reimbursement l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id) as process
		<dynamic prepend="where">
	        <isNotEmpty prepend="and" property="userId">
				user_id = #userId# and status <![CDATA[<>]]> 2
			</isNotEmpty>
			<isNotEmpty prepend="and" property="processTypeId">
				processTypeId = #processTypeId#
			</isNotEmpty>
	    </dynamic>
	order by appTime desc 
	<dynamic prepend="limit">
		<isNotNull property="pageStart">
			<isNotNull property="pageSize">#pageStart#, #pageSize#</isNotNull>
		</isNotNull>
	</dynamic>
  </select>
  <select id="getProcessListPageCount" resultClass="java.lang.Integer" parameterClass="com.sales.model.SProcess" >
    select count(*) from
		(select leave_id as processId,1 as processTypeId, u.user_name as userName,d.name as deptName,l.leave_time as appTime,u.user_id,l.status     
		from s_leave l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select overtime_id as processId,2 as processTypeId, u.user_name as userName,d.name as deptName,l.overtime_time as appTime,u.user_id,l.status      
		from s_overtime l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select trip_id as processId,3 as processTypeId, u.user_name as userName,d.name as deptName,l.trip_time as appTime,u.user_id,l.status      
		from s_trip_application l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select expense_application_id as processId,4 as processTypeId, u.user_name as userName,d.name as deptName,l.expense_time as appTime,u.user_id,l.status      
		from s_expense_application l 
		left join s_user u on l.expense_user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select reimbursement_id as processId,5 as processTypeId, u.user_name as userName,d.name as deptName,l.reimbursement_time as appTime ,u.user_id,l.status     
		from s_expense_reimbursement l 
		left join s_user u on l.reimbursement_user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select car_application_id as processId,6 as processTypeId, u.user_name as userName,d.name as deptName,l.application_time as appTime,u.user_id,l.status      
		from s_car_repair_application l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id 
		union 
		select car_reimbursement_id as processId,7 as processTypeId, u.user_name as userName,d.name as deptName,l.reimbursement_time as appTime,u.user_id,l.status      
		from s_car_repair_reimbursement l 
		left join s_user u on l.user_id = u.user_id 
		left join s_department d on u.department_id = d.department_id) as process
		<dynamic prepend="where">
	        <isNotEmpty prepend="and" property="userId">
				user_id = #userId#  and status <![CDATA[<>]]> 2
			</isNotEmpty>
			<isNotEmpty prepend="and" property="processTypeId">
				processTypeId = #processTypeId#
			</isNotEmpty>
	    </dynamic>
  </select>
  
  <insert id="insertProcessHistory" parameterClass="com.sales.model.SProcess" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Apr 23 17:36:30 CST 2013.
    -->
    insert into s_process_history (process_id, process_type_id, user_id, dept_name, app_time,operation,op_user_id)
    values (#processId:INTEGER#, #processTypeId:VARCHAR#, #userId:INTEGER#, #deptName:VARCHAR#, #appTime:TIMESTAMP#, #operation:VARCHAR#, #opUserId:INTEGER#) 
      
  </insert>
  
  <select id="getProcessHistoryListPage" resultMap="ProcessResult" parameterClass="com.sales.model.SProcess" >
    select h.process_id as processId,h.process_type_id as processTypeId,u.user_name as userName,h.dept_name as deptName,h.app_time as appTime 
    from s_process_history h left join s_user u on h.user_id = u.user_id 
    <dynamic prepend="where">
            <isNotEmpty prepend="and" property="opUserId">
				h.op_user_id = #opUserId# 
			</isNotEmpty>
	        <isNotEmpty prepend="and" property="userId">
				h.user_id = #userId# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="userName">
				u.user_name like '%$userName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="startTime">
				h.app_time <![CDATA[>= ]]> #startTime# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="endTime">
				h.app_time <![CDATA[<= ]]> #endTime# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="processTypeId">
				h.process_type_id = #processTypeId#
			</isNotEmpty>
	</dynamic>
	group by h.process_id,h.process_type_id
    order by h.app_time desc,h.process_type_id asc 
	<dynamic prepend="limit">
		<isNotNull property="pageStart">
			<isNotNull property="pageSize">#pageStart#, #pageSize#</isNotNull>
		</isNotNull>
	</dynamic>
  </select>
  
  <select id="getProcessHistoryListPageCount" resultClass="java.lang.Integer" parameterClass="com.sales.model.SProcess" >
    select count(*) from (select h.process_id,h.process_type_id from s_process_history h 
    left join s_user u on h.user_id = u.user_id 
    <dynamic prepend="where">
            <isNotEmpty prepend="and" property="opUserId">
				h.op_user_id = #opUserId# 
			</isNotEmpty>
	        <isNotEmpty prepend="and" property="userId">
				h.user_id = #userId# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="userName">
				u.user_name like '%$userName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="startTime">
				h.app_time <![CDATA[>= ]]> #startTime# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="endTime">
				h.app_time <![CDATA[<= ]]> #endTime# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="processTypeId">
				h.process_type_id = #processTypeId#
			</isNotEmpty>
	</dynamic>
	group by h.process_id,h.process_type_id) t
    </select>
    
    <select id="getAnnualLeaveHours" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" >
        select annual_hours from s_annual_leave where user_id = #userId# 
    </select>
    
    <update id="updateAnnualLeaveHours" parameterClass="com.sales.model.SAnnualLeave" >
        update s_annual_leave set annual_hours = #annualHours# where user_id = #userId#
    </update>
    
    <resultMap id="annualResult" class="com.sales.model.SAnnualLeave" >
	    <result column="id" property="id" jdbcType="INTEGER" />
	    <result column="user_id" property="userId" jdbcType="INTEGER" />
	    <result column="annual_hours" property="annualHours" jdbcType="INTEGER" />
	    <result column="update_time" property="updateTime" jdbcType="DATE" />
    </resultMap>
    <select id="getAnnualLeave" resultMap="annualResult" parameterClass="java.lang.Integer" >
        select id,user_id,annual_hours,update_time from s_annual_leave where user_id = #userId# 
    </select>
</sqlMap>