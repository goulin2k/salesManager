package com.sales.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.sales.dao.SCustomerProjectDAO;
import com.sales.model.SCustomerProject;

import my.com.ibatis.core.dao.support.Page;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class SCustomerProjectDAOImpl extends SqlMapClientDaoSupport implements SCustomerProjectDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public SCustomerProjectDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public void insert(SCustomerProject record) {
        getSqlMapClientTemplate().insert("s_customer_project.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public int updateByPrimaryKey(SCustomerProject record) {
        int rows = getSqlMapClientTemplate().update("s_customer_project.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public int updateByPrimaryKeySelective(SCustomerProject record) {
        int rows = getSqlMapClientTemplate().update("s_customer_project.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public SCustomerProject selectByPrimaryKey(Integer projectId) {
        SCustomerProject key = new SCustomerProject();
        key.setProjectId(projectId);
        SCustomerProject record = (SCustomerProject) getSqlMapClientTemplate().queryForObject("s_customer_project.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_customer_project
     *
     * @abatorgenerated Thu Jun 27 16:47:57 CST 2013
     */
    public int deleteByPrimaryKey(Integer projectId) {
        SCustomerProject key = new SCustomerProject();
        key.setProjectId(projectId);
        int rows = getSqlMapClientTemplate().delete("s_customer_project.deleteByPrimaryKey", key);
        return rows;
    }

	@Override
	public List<SCustomerProject> getCustomerProjectListByCustomerId(
			Integer customerId) {
		// TODO Auto-generated method stub
		List customerProjectList = getSqlMapClientTemplate().queryForList("s_customer_project.getCustomerProjectListByCustomerId", customerId);
		return customerProjectList;
	}

	@Override
	public Integer getCustomerProjectCount(SCustomerProject project) {
		Map<String,Comparable> queryMap = new HashMap<String,Comparable>();
		if(project.getName() == null || project.getName().length() <1)
			queryMap.put("name", null);
		else	
			queryMap.put("name", project.getName());
		if(project.getCustomerName() == null || project.getCustomerName().length() <1)
			queryMap.put("customerName", null);
		else	
			queryMap.put("customerName", project.getCustomerName());
		
		return (Integer) getSqlMapClientTemplate().queryForObject(
				"s_customer_project.getCustomerProjectCount", queryMap);
	}

	@Override
	public List<SCustomerProject> selectCPlist(Long pageNumber, int pageSize,
			SCustomerProject project) {
		// TODO Auto-generated method stub
		long startRow = Page.getStartOfPage(pageNumber, pageSize);
		long endRow = pageSize;
		Map<String,Comparable> queryMap = new HashMap<String,Comparable>();
		queryMap.put("startRow", startRow);
		queryMap.put("endRow",endRow);
		if(project.getName() == null || project.getName().length() <1)
			queryMap.put("name", null);
		else	
			queryMap.put("name", project.getName());
		
		if(project.getCustomerName() == null || project.getCustomerName().length() <1)
			queryMap.put("customerName", null);
		else	
			queryMap.put("customerName", project.getCustomerName());
		List customerProjectList = getSqlMapClientTemplate().queryForList(
				"s_customer_project.selectCPlist",queryMap);
		return customerProjectList;
	}

	@Override
	public Integer getCPCountByCustomerIds(SCustomerProject project, String customerIds) {
		Map<String,Comparable> queryMap = new HashMap<String,Comparable>();
		if(project.getName() == null || project.getName().length() <1)
			queryMap.put("name", null);
		else	
			queryMap.put("name", project.getName());
		if(project.getCreateUserName() == null || project.getCreateUserName().length() <1)
			queryMap.put("createUser", null);
		else	
			queryMap.put("createUser", project.getCreateUserName());
		if(project.getCustomerName() == null || project.getCustomerName().length() <1)
			queryMap.put("custmerName", null);
		else	
			queryMap.put("custmerName", project.getCustomerName());
		queryMap.put("customerIds", customerIds);
		
		return (Integer) getSqlMapClientTemplate().queryForObject(
				"s_customer_project.getCPCountByCustomerIds",queryMap);
	}

	@Override
	public List<SCustomerProject> selectCPlistByCustomerIds(Long pageNumber,
			int pageSize, SCustomerProject project, String customerIds) {
		// TODO Auto-generated method stub
		long startRow = Page.getStartOfPage(pageNumber, pageSize);
		long endRow = pageSize;
		Map<String,Comparable> queryMap = new HashMap<String,Comparable>();
		queryMap.put("startRow", startRow);
		queryMap.put("endRow",endRow);
		
		if(project.getName() == null || project.getName().length() <1)
			queryMap.put("name", null);
		else	
			queryMap.put("name", project.getName());
		if(project.getCreateUserName() == null || project.getCreateUserName().length() <1)
			queryMap.put("createUser", null);
		else	
			queryMap.put("createUser", project.getCreateUserName());
		if(project.getCustomerName() == null || project.getCustomerName().length() <1)
			queryMap.put("custmerName", null);
		else	
			queryMap.put("custmerName", project.getCustomerName());
		
		queryMap.put("customerIds", customerIds);
		List customerProjectList = getSqlMapClientTemplate().queryForList(
				"s_customer_project.selectCPlistByCustomerIds",queryMap);
		return customerProjectList;
	}
}