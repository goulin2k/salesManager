package com.sales.dao.impl;

import java.util.List;

import com.sales.dao.SDepartmentDAO;
import com.sales.model.SDepartment;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class SDepartmentDAOImpl extends SqlMapClientDaoSupport implements SDepartmentDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_department
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SDepartmentDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_department
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public void insert(SDepartment department) {
        getSqlMapClientTemplate().insert("s_department.insertSDepartment", department);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_department
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public void updateSDepartment(SDepartment department) {
        getSqlMapClientTemplate().update("s_department.updateSDepartment", department);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_department
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SDepartment getSDepartmentById(Integer departmentId) { 
        SDepartment department = (SDepartment) getSqlMapClientTemplate().queryForObject("s_department.getSDepartmentById", departmentId);
        return department;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_department
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public void deleteSDepartmentById(Integer departmentId) { 
        getSqlMapClientTemplate().delete("s_department.deleteSDepartment", departmentId); 
    }

	@Override
	public List<SDepartment> getUnderDepartmentListById(Integer departmentId) {
		// TODO Auto-generated method stub
		List depList = getSqlMapClientTemplate().queryForList("s_department.getUnderDepartmentListById", departmentId);
		return depList;
	}
	
	public List getSDepartmentList(Integer departmentId) {
		List depList = getSqlMapClientTemplate().queryForList("s_department.getSDepartmentList", departmentId);
		return depList;
	} 
	
	public List getSDepartByParentId(Integer parentId){
		List departList = (List) getSqlMapClientTemplate().queryForList("s_department.getSDepartByParentId", parentId);
		return departList;		
	}

	@Override
	public List<SDepartment> getDepAndChildById(Integer departmentId) {
		// TODO Auto-generated method stub
		List depList = getSqlMapClientTemplate().queryForList("s_department.getDepAndChildById", departmentId);
		return depList;
	}
}