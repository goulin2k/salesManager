package com.sales.dao.impl;

import java.util.List;

import com.sales.dao.SExpenseReimbursementDAO;
import com.sales.model.SExpenseReimbursement;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class SExpenseReimbursementDAOImpl extends SqlMapClientDaoSupport implements SExpenseReimbursementDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SExpenseReimbursementDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public Integer insert(SExpenseReimbursement record) {
        return (Integer) getSqlMapClientTemplate().insert("s_expense_reimbursement.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKey(SExpenseReimbursement record) {
        int rows = getSqlMapClientTemplate().update("s_expense_reimbursement.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKeySelective(SExpenseReimbursement record) {
        int rows = getSqlMapClientTemplate().update("s_expense_reimbursement.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SExpenseReimbursement selectByPrimaryKey(Integer reimbursementId) {
        SExpenseReimbursement key = new SExpenseReimbursement();
        key.setReimbursementId(reimbursementId);
        SExpenseReimbursement record = (SExpenseReimbursement) getSqlMapClientTemplate().queryForObject("s_expense_reimbursement.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_expense_reimbursement
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int deleteByPrimaryKey(Integer reimbursementId) {
        SExpenseReimbursement key = new SExpenseReimbursement();
        key.setReimbursementId(reimbursementId);
        int rows = getSqlMapClientTemplate().delete("s_expense_reimbursement.deleteByPrimaryKey", key);
        return rows;
    }

	@Override
	public List<SExpenseReimbursement> getExpenseReimbursementListPage(SExpenseReimbursement er) {
		return getSqlMapClientTemplate().queryForList("s_expense_reimbursement.getExpenseReimbursementListPage", er);
	}

	@Override
	public Integer getExpenseReimbursementListPageCount(SExpenseReimbursement er) {
		return (Integer) getSqlMapClientTemplate().queryForObject("s_expense_reimbursement.getExpenseReimbursementListPageCount", er);
	}

	@Override
	public String getMaxCode() {
		Object obj = getSqlMapClientTemplate().queryForObject("s_expense_reimbursement.getMaxCode");
		if (obj != null) {
		    return (String) obj;
		}
		return null;
	}
}