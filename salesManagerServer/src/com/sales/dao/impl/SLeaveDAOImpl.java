package com.sales.dao.impl;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.sales.dao.SLeaveDAO;
import com.sales.model.SAnnualLeave;
import com.sales.model.SLeave;
import com.sales.model.SProcess;

public class SLeaveDAOImpl extends SqlMapClientDaoSupport implements SLeaveDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SLeaveDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public Integer insert(SLeave record) {
        return (Integer) getSqlMapClientTemplate().insert("s_leave.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKey(SLeave record) {
        int rows = getSqlMapClientTemplate().update("s_leave.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKeySelective(SLeave record) {
        int rows = getSqlMapClientTemplate().update("s_leave.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SLeave selectByPrimaryKey(Integer leaveId) {
        SLeave key = new SLeave();
        key.setLeaveId(leaveId);
        SLeave record = (SLeave) getSqlMapClientTemplate().queryForObject("s_leave.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_leave
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int deleteByPrimaryKey(Integer leaveId) {
        SLeave key = new SLeave();
        key.setLeaveId(leaveId);
        int rows = getSqlMapClientTemplate().delete("s_leave.deleteByPrimaryKey", key);
        return rows;
    }

	@Override
	public List<SLeave> getLeaveListPage(SLeave leave) {
		return getSqlMapClientTemplate().queryForList("s_leave.getLeaveListPage", leave);
	}

	@Override
	public Integer getLeaveListPageCount(SLeave leave) {
		return (Integer) getSqlMapClientTemplate().queryForObject("s_leave.getLeaveListPageCount", leave);
	}

	@Override
	public List<SProcess> getProcessListPage(SProcess process) {
		return getSqlMapClientTemplate().queryForList("s_leave.getProcessListPage", process);
	}

	@Override
	public Integer getProcessListPageCount(SProcess process) {
		return (Integer) getSqlMapClientTemplate().queryForObject("s_leave.getProcessListPageCount", process);
	}

	@Override
	public void insertProcessHistory(SProcess process) {
		getSqlMapClientTemplate().insert("s_leave.insertProcessHistory", process);
	}

	@Override
	public List<SProcess> getProcessHistoryListPage(SProcess process) {
		return getSqlMapClientTemplate().queryForList("s_leave.getProcessHistoryListPage", process);
	}

	@Override
	public Integer getProcessHistoryListPageCount(SProcess process) {
		return (Integer) getSqlMapClientTemplate().queryForObject("s_leave.getProcessHistoryListPageCount", process);
	}

	@Override
	public String getMaxCode() {
		Object obj = getSqlMapClientTemplate().queryForObject("s_leave.getMaxCode");
		if (obj != null) {
		    return (String) obj;
		}
		return null;
	}

	@Override
	public Integer getAnnualLeaveHours(Integer userId) {
		return (Integer) getSqlMapClientTemplate().queryForObject("s_leave.getAnnualLeaveHours", userId);
	}

	@Override
	public int updateAnnualLeaveHours(SAnnualLeave sal) {
		int rows = getSqlMapClientTemplate().update("s_leave.updateAnnualLeaveHours", sal);
        return rows;
	}

	@Override
	public SAnnualLeave getAnnualLeave(Integer userId) {
		return (SAnnualLeave) getSqlMapClientTemplate().queryForObject("s_leave.getAnnualLeave", userId);
	}
}