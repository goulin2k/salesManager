package com.sales.dao.impl;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.sales.dao.SPerformanceSqlDAO;
import com.sales.model.SPerformanceSql;

public class SPerformanceSqlDAOImpl extends SqlMapClientDaoSupport implements SPerformanceSqlDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SPerformanceSqlDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public void insert(SPerformanceSql record) {
        getSqlMapClientTemplate().insert("s_performance_sql.insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKey(SPerformanceSql record) {
        int rows = getSqlMapClientTemplate().update("s_performance_sql.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int updateByPrimaryKeySelective(SPerformanceSql record) {
        int rows = getSqlMapClientTemplate().update("s_performance_sql.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public SPerformanceSql selectByPrimaryKey(Integer sqlId) {
        SPerformanceSql key = new SPerformanceSql();
        key.setSqlId(sqlId);
        SPerformanceSql record = (SPerformanceSql) getSqlMapClientTemplate().queryForObject("s_performance_sql.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table s_performance_sql
     *
     * @abatorgenerated Tue Apr 23 17:36:30 CST 2013
     */
    public int deleteByPrimaryKey(Integer sqlId) {
        SPerformanceSql key = new SPerformanceSql();
        key.setSqlId(sqlId);
        int rows = getSqlMapClientTemplate().delete("s_performance_sql.deleteByPrimaryKey", key);
        return rows;
    }

	@Override
	public List<SPerformanceSql> getSqlList() {
		return getSqlMapClientTemplate().queryForList("s_performance_sql.getSqlList");
	}

	/* (non-Javadoc)
	 * @see com.sales.dao.SPerformanceSqlDAO#calSqlScore(java.lang.String, java.lang.String, java.util.Date, java.util.Date)
	 */
	@Override
	public int calSqlScore(String sql, String userIds, Date startDate, Date endDate) {
		int score = 0;
		if(sql == null)
			throw(new RuntimeException("Not Calc Sql Yet, please query for more:[s_performance_sql]."));
		try {
			String fmt = "yyyy-MM-dd";
			SimpleDateFormat sdf = new SimpleDateFormat(fmt);
			String prepareSql = sql.replace("(?)", "("+userIds+")");
			PreparedStatement ps =  this.getDataSource().getConnection().prepareStatement(prepareSql);
//			ps.setString(1, userIds);
			ps.setDate(1, new java.sql.Date(startDate.getTime()));
			ps.setDate(2, new java.sql.Date(endDate.getTime()));
			ResultSet rs = ps.executeQuery();  
			while(rs.next()){  
				score = rs.getInt(1);  
            }  
			rs.close();
			ps.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return score;
	}

	/* (non-Javadoc)
	 * @see com.sales.dao.SPerformanceSqlDAO#selectByPrimaryName(java.lang.String)
	 */
	@Override
	public SPerformanceSql selectByPrimaryName(String name) {
		SPerformanceSql key = new SPerformanceSql();
        key.setName(name);
        SPerformanceSql record = (SPerformanceSql) getSqlMapClientTemplate().queryForObject("s_performance_sql.selectByName", key);
        return record;
	}
	
	
}